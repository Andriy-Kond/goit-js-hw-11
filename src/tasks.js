import Notiflix from 'notiflix';
// const axios = require('axios').default;
import axios from 'axios'; // ? чи буде так працювати?
import SimpleLightbox from 'simplelightbox';

import 'simplelightbox/dist/simple-lightbox.min.css';

// * публічний API
// https://pixabay.com/api/

// * Список параметрів рядка запиту, які обов'язково необхідно вказати:
const queryOptions = {
  key: '33366610-411111b526c4f712cf2f691e8', // мій унікальний ключ доступу до API.
  q: '', // термін для пошуку. Те, що буде вводити користувач.
  image_type: 'photo', // тип світлини
  orientation: 'horizontal', // орієнтація світлини
  safesearch: true, // фільтр за віком
};

// * У відповіді буде масив зображень, що задовольнили критерії параметрів запиту. Кожне зображення описується об'єктом, з якого тобі цікаві тільки наступні властивості:
const queryRequest = {
  webformatURL: 'http://', // посилання на маленьку світлину
  largeImageURL: 'http://', // посилання на велику світлину
  tags: '', // рядок з описом зображення (для атрибуту alt)
  likes: 0, // кількість вподобайок
  views: 0, // кількість переглядів
  comments: 0, // кількість коментарів
  downloads: 0, // кількість завантажень
};

// * Якщо бекенд нічого не знайшов, то треба показати повідомлення:
// "Sorry, there are no images matching your search query. Please try again."

// * Пагінація
// Pixabay API підтримує пагінацію і надає параметри page і per_page.
// Зроби так, щоб в кожній відповіді приходило 40 об'єктів (за замовчуванням 20).
// Початкове значення параметра page повинно бути 1.
// З кожним наступним запитом, його необхідно збільшити на 1.
// У разі пошуку за новим ключовим словом, значення page потрібно повернути до початкового, оскільки буде пагінація по новій колекції зображень.

// * Прокручування сторінки
// Зробити плавне прокручування сторінки після запиту і відтворення кожної наступної групи зображень. Ось тобі код-підказка, але розберися у ньому самостійно.
const { height: cardHeight } = document
  .querySelector('.gallery')
  .firstElementChild.getBoundingClientRect();

window.scrollBy({
  top: cardHeight * 2,
  behavior: 'smooth',
});

// * Нескінченний скрол
// Замість кнопки «Load more», можна зробити нескінченне завантаження зображень під час прокручування сторінки. Ми надаємо тобі повну свободу дій в реалізації, можеш використовувати будь-які бібліотеки.
